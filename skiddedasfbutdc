-- Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- Cache
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = workspace.CurrentCamera

-- Variables
local FindFirstChild = game.FindFirstChild
local Color3New = Color3.new
local Vector2New = Vector2.new
local DrawingNew = Drawing.new
local Round = math.round
local Random = math.random
local FindPartOnRayWithIgnoreList = workspace.FindPartOnRayWithIgnoreList
local CameraWorldToViewportPoint = CurrentCamera.WorldToViewportPoint
local UnbindFromRenderStep = RunService.UnbindFromRenderStep

local Library = {
    Cache = {},
    Drawings = {},
    Friendlies = {
        Enabled = true,
        BoundingBox = {Visible = true, Color = Color3.fromRGB(0, 255, 0)},
        Name = {Visible = true, Color = Color3.fromRGB(255,255,255)},
        HealthBar = {Visible = true, ColorStart = Color3.fromRGB(255, 0, 0), ColorEnd = Color3.fromRGB(0, 255, 0)},
        Distance = {Visible = true, Color = Color3.fromRGB(255,255,255)},
    },
    Enemies = {
        Enabled = true,
        BoundingBox = {Visible = true, Color = Color3.fromRGB(255, 0, 0)},
        Name = {Visible = true, Color = Color3.fromRGB(255,255,255)},
        Health = {Bar = true, Health = true, ColorStart = Color3.fromRGB(0, 255, 0), ColorEnd = Color3.fromRGB(255, 0, 0)},
        Distance = {Visible = true, Color = Color3.fromRGB(255,255,255)},
    },
    Local = {
        Enabled = true,
        BoundingBox = {Visible = true, Color = Color3.fromRGB(255, 0, 0)},
        Name = {Visible = true, Color = Color3.fromRGB(255,255,255)},
        Health = {Bar = true, Health = true, ColorStart = Color3.fromRGB(0, 255, 0), ColorEnd = Color3.fromRGB(255, 0, 0)},
        Distance = {Visible = true, Color = Color3.fromRGB(255,255,255)}
    }
}


local function Create(Class, Properties)
    local Object = DrawingNew(Class)

    for Property, Value in pairs(Properties) do
        Object[Property] = Value
    end

    table.insert(Library.Drawings, Object)
    return Object
end

local function RoundVec(Vector)
    return Vector2New(Round(Vector.X), Round(Vector.Y))
end

local function WorldToViewportPoint(Position)
    local ScreenPos, OnScreen = CameraWorldToViewportPoint(CurrentCamera, Position)
    return Vector2New(ScreenPos.X, ScreenPos.Y), OnScreen, ScreenPos.Z
end

function AliveCheck(player)
    local alive = false
    if player ~= nil and player.Parent == game.Players and player.Character ~= nil then
		if player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") ~= nil and player.Character.Humanoid.Health > 0 and player.Character:FindFirstChild("Head") then
			alive = true
		end
    end

    return alive
end

function Library.GetTeam(Player)
    return Player.Team
end

function Library.GetCharacter(Player)
    local Character = Player.Character
    return Character, Character and FindFirstChild(Character, "HumanoidRootPart")
end

function Library.VisibleCheck(Origin, Target, Character)
    local Part = FindPartOnRayWithIgnoreList(workspace, Ray.new(Origin, Target - Origin), { CurrentCamera, LocalPlayer.Character, Character }, false, true)
    return Part == nil
end

function Library.GetHealth(Character)
    local Humanoid = FindFirstChild(Character, "Humanoid")
    return Humanoid.Health, Humanoid.MaxHealth
end

function Library.AddEsp(Player)
    local Objects = {
        Name = Create("Text", {Text = Player.Name, Size = 13, Center = true, Outline = true, OutlineColor = Color3New(), Font = 2, ZIndex = Id + 10}),
        Box = Create("Square", { Thickness = 1, ZIndex = Id + 9,}),
        BoxOutline = Create("Square", {Thickness = 3, Color = Color3New(), ZIndex = Id + 8}),
        BoxFill = Create("Square", {Thickness = 1, Transparency = 0.5, ZIndex = Id + 7, Filled = true,}),
        healthtext = create("Text", {Size = 13, Center = false, Outline = true, OutlineColor = color3New(), Font = 2}),
        Healthbar = Create("Square", {Thickness = 1, Filled = true, ZIndex = Id + 6,}),
        HealthbarOutline = Create("Square", {Thickness = 3, Filled = true, Color = Color3New(), ZIndex = Id + 5}),
        HeadDot = create("Circle", {Thickness = 1, NumSides = 128, Radius = 5, Filled = false,})
    }

    Library.Cache[Player] = Objects
end

function Library.RemoveEsp(Player)
    local Data = Library.Cache[Player]

    if (Data) then
        Library.Cache[Player] = nil

        for i,v in pairs(Data) do
            v:Remove()
            Data[i] = nil
        end
    end
end

function Library:Unload()
    UnbindFromRenderStep(RunService, "EspLoadmuhahahah")

    for _, Player in pairs(Players:GetPlayers()) do
        Library.RemoveEsp(Player)
    end

    for _, Object in pairs(Library.Drawings) do
        Object:Destroy()
    end
end

function Library:Init()
    Players.PlayerAdded:Connect(function(Player)
        Library.AddEsp(Player)
    end)

    Players.PlayerRemoving:Connect(function(Player)
        Library.RemoveEsp(Player)
    end)

    RunService.BindToRenderStep(RunService, "EspLoadmuhahahah", 1, function() for Player, Objects in pairs(Library.Cache) do
        if AliveCheck(Player) then
            local Character, Torso = Library.GetCharacter(Player)

            if (Character and Torso) then
                local TorsoPosition, OnScreen, Depth = WorldToViewportPoint(Torso.Position)

                if (OnScreen) then
                    local ScaleFactor = 1 / (math.tan(math.rad(CurrentCamera.FieldOfView / 2)) * 2 * Depth) * 1000
                    local Width, Height = Round(Library.Options.WidthInStuds * ScaleFactor), Round(Library.Options.HeightInStuds * ScaleFactor)
                    local X, Y = Round(TorsoPosition.X), Round(TorsoPosition.Y)
                    local BoxPosition = RoundVec(Vector2New(X - Width / 2, Y - Height / 2))
                    local BoxSize = Vector2New(Width, Height)
                    local Health, MaxHealth = Library.GetHealth(Character)
                    local HealthbarPosition = RoundVec(Vector2New(BoxPosition.X - (3 + 1), BoxPosition.Y + BoxSize.Y))
                    local HealthbarSize = RoundVec(Vector2New(1, -BoxSize.Y))
                    local Magnitude = Round((CurrentCamera.CFrame.Position - Torso.Position).Magnitude)

                    if Library.Friendlies.Enabled == true and Player.TeamColor == LocalPlayer.TeamColor then
                        Objects.Name.Visible = Library.Friendlies.Name.Visible
                        Objects.Name.Color = Library.Friendlies.Name.Color
                        Objects.Name.Position = Vector2New(X, BoxPosition.Y - 15)

                        Objects.Box.Visible = Library.Friendlies.BoundingBox.Visible
                        Objects.Box.Color = Library.Colors.BoundingBox.Color
                        Objects.Box.Position = BoxPosition
                        Objects.Box.Size = BoxSize

                        Objects.BoxOutline.Visible = Library.Friendlies.Boxes.Visible
                        Objects.BoxOutline.Position = BoxPosition
                        Objects.BoxOutline.Size = BoxSize

                        Objects.BoxFill.Visible = Library.Friendlies.BoundingBox.Visible
                        Objects.BoxFill.Color = Library.Colors.BoundingBox.Color
                        Objects.BoxFill.Position = BoxPosition
                        Objects.BoxFill.Size = BoxSize

                        Objects.Healthbar.Visible = Library.Friendlies.Health.Bar
                        Objects.Healthbar.Color = Library.Friendlies.Health.ColorStart:lerp(Library.Friendlies.Health.ColorEnd, Health/MaxHealth)
                        Objects.Healthbar.Position = HealthbarPosition
                        Objects.Healthbar.Size = RoundVec(Vector2New(HealthbarSize.X, HealthbarSize.Y * (Health / MaxHealth)))

                        Objects.HealthbarOutline.Visible = Library.Friendlies.Healthbars.Bar
                        Objects.HealthbarOutline.Position = HealthbarPosition - Vector2New(1, -1)
                        Objects.HealthbarOutline.Size = HealthbarSize + Vector2New(2, -2)

                        Objects.Distance.Visible = Library.Friendlies.Distance.Visible
                        Objects.Distance.Color = Library.Colors.Distance.Visible
                        Objects.Distance.Text = Magnitude .. " Studs"
                        Objects.Distance.Position = Vector2New(X, (BoxPosition.Y + BoxSize.Y) + 3)
                    elseif Library.Enemies.Enabled == true and Player.TeamColor ~= LocalPlayer.TeamColor then
                        Objects.Name.Visible = Library.Enemies.Name.Visible
                        Objects.Name.Color = Library.Enemies.Name.Color
                        Objects.Name.Position = Vector2New(X, BoxPosition.Y - 15)

                        Objects.Box.Visible = Library.Enemies.BoundingBox.Visible
                        Objects.Box.Color = Library.Colors.BoundingBox.Color
                        Objects.Box.Position = BoxPosition
                        Objects.Box.Size = BoxSize

                        Objects.BoxOutline.Visible = Library.Enemies.Boxes.Visible
                        Objects.BoxOutline.Position = BoxPosition
                        Objects.BoxOutline.Size = BoxSize

                        Objects.BoxFill.Visible = Library.Enemies.BoundingBox.Visible
                        Objects.BoxFill.Color = Library.Colors.BoundingBox.Color
                        Objects.BoxFill.Position = BoxPosition
                        Objects.BoxFill.Size = BoxSize

                        Objects.Healthbar.Visible = Library.Enemies.Health.Bar
                        Objects.Healthbar.Color = Library.Enemies.Health.ColorStart:lerp(Library.Enemies.Health.ColorEnd, Health/MaxHealth)
                        Objects.Healthbar.Position = HealthbarPosition
                        Objects.Healthbar.Size = RoundVec(Vector2New(HealthbarSize.X, HealthbarSize.Y * (Health / MaxHealth)))

                        Objects.HealthbarOutline.Visible = Library.Enemies.Healthbars.Bar
                        Objects.HealthbarOutline.Position = HealthbarPosition - Vector2New(1, -1)
                        Objects.HealthbarOutline.Size = HealthbarSize + Vector2New(2, -2)

                        Objects.Distance.Visible = Library.Enemies.Distance.Visible
                        Objects.Distance.Color = Library.Colors.Distance.Visible
                        Objects.Distance.Text = Magnitude .. " Studs"
                        Objects.Distance.Position = Vector2New(X, (BoxPosition.Y + BoxSize.Y) + 3)
                    elseif Library.Local.Enabled == true and Player.Name == LocalPlayer.Name then
                        Objects.Name.Visible = Library.Local.Name.Visible
                        Objects.Name.Color = Library.Local.Name.Color
                        Objects.Name.Position = Vector2New(X, BoxPosition.Y - 15)

                        Objects.Box.Visible = Library.Local.BoundingBox.Visible
                        Objects.Box.Color = Library.Colors.BoundingBox.Color
                        Objects.Box.Position = BoxPosition
                        Objects.Box.Size = BoxSize

                        Objects.BoxOutline.Visible = Library.Local.Boxes.Visible
                        Objects.BoxOutline.Position = BoxPosition
                        Objects.BoxOutline.Size = BoxSize

                        Objects.BoxFill.Visible = Library.Local.BoundingBox.Visible
                        Objects.BoxFill.Color = Library.Colors.BoundingBox.Color
                        Objects.BoxFill.Position = BoxPosition
                        Objects.BoxFill.Size = BoxSize

                        Objects.Healthbar.Visible = Library.Local.Health.Bar
                        Objects.Healthbar.Color = Library.Local.Health.ColorStart:lerp(Library.Local.Health.ColorEnd, Health/MaxHealth)
                        Objects.Healthbar.Position = HealthbarPosition
                        Objects.Healthbar.Size = RoundVec(Vector2New(HealthbarSize.X, HealthbarSize.Y * (Health / MaxHealth)))

                        Objects.HealthbarOutline.Visible = Library.Local.Healthbars.Bar
                        Objects.HealthbarOutline.Position = HealthbarPosition - Vector2New(1, -1)
                        Objects.HealthbarOutline.Size = HealthbarSize + Vector2New(2, -2)

                        Objects.Distance.Visible = Library.Local.Distance.Visible
                        Objects.Distance.Color = Library.Colors.Distance.Visible
                        Objects.Distance.Text = Magnitude .. " Studs"
                        Objects.Distance.Position = Vector2New(X, (BoxPosition.Y + BoxSize.Y) + 3)
                    end
                else
                    for i,v in pairs(Objects) do
                        v.Visible = false
                    end
                end
            else
                for i,v in pairs(Objects) do
                    v.Visible = false
                end
            end
        else
            for i,v in pairs(Objects) do
                v.Visible = false
            end
        end
    end
end)

    for i,v in pairs(Players:GetPlayers()) do
        Library.AddEsp(v)
    end
end

return Library
